.IFJcode18
JUMP $FOOL1
LABEL $FNAME0x55ffc85b99f0
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85b99f0
MOVE LF@$RTVL0x55ffc85b99f0 nil@nil
PUSHS LF@$RTVL0x55ffc85b99f0
READ LF@$RTVL0x55ffc85b99f0 string
PUSHS LF@$RTVL0x55ffc85b99f0
POPS LF@$RTVL0x55ffc85b99f0
POPFRAME
RETURN
LABEL $FOOL1

JUMP $FOOL2
LABEL $FNAME0x55ffc85b9b00
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85b9b00
MOVE LF@$RTVL0x55ffc85b9b00 nil@nil
PUSHS LF@$RTVL0x55ffc85b9b00
READ LF@$RTVL0x55ffc85b9b00 int
PUSHS LF@$RTVL0x55ffc85b9b00
POPS LF@$RTVL0x55ffc85b9b00
POPFRAME
RETURN
LABEL $FOOL2

JUMP $FOOL3
LABEL $FNAME0x55ffc85b9c10
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85b9c10
MOVE LF@$RTVL0x55ffc85b9c10 nil@nil
PUSHS LF@$RTVL0x55ffc85b9c10
READ LF@$RTVL0x55ffc85b9c10 float
PUSHS LF@$RTVL0x55ffc85b9c10
POPS LF@$RTVL0x55ffc85b9c10
POPFRAME
RETURN
LABEL $FOOL3

JUMP $FOOL4
LABEL $FNAME0x55ffc85b9d20
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85b9d20
MOVE LF@$RTVL0x55ffc85b9d20 nil@nil
PUSHS LF@$RTVL0x55ffc85b9d20
WRITE LF@$P1
PUSHS LF@$RTVL0x55ffc85b9d20
POPS LF@$RTVL0x55ffc85b9d20
POPFRAME
RETURN
LABEL $FOOL4

JUMP $FOOL5
LABEL $FNAME0x55ffc85b9e30
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85b9e30
MOVE LF@$RTVL0x55ffc85b9e30 nil@nil
PUSHS LF@$RTVL0x55ffc85b9e30
STRLEN LF@$RTVL0x55ffc85b9e30 LF@$P1
PUSHS LF@$RTVL0x55ffc85b9e30
POPS LF@$RTVL0x55ffc85b9e30
POPFRAME
RETURN
LABEL $FOOL5

JUMP $FOOL6
LABEL $FNAME0x55ffc85b9f40
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85b9f40
MOVE LF@$RTVL0x55ffc85b9f40 nil@nil
PUSHS LF@$RTVL0x55ffc85b9f40
DEFVAR LF@str_s
MOVE LF@str_s LF@$P1
DEFVAR LF@str_i
MOVE LF@str_i LF@$P2
DEFVAR LF@str_n
MOVE LF@str_n LF@$P3
DEFVAR LF@tmp_concat
DEFVAR LF@str_length
STRLEN LF@str_length LF@str_s
DEFVAR LF@aux1
DEFVAR LF@aux2
GT LF@aux1 LF@str_i int@-1
LT LF@aux2 LF@$P2 LF@str_length
DEFVAR LF@aux3
AND LF@aux3 LF@aux1 LF@aux2
DEFVAR LF@aux4
GT LF@aux4 LF@str_n int@-1
JUMPIFNEQ LEND6 LF@aux3 LF@aux4
DEFVAR LF@cnt
MOVE LF@cnt int@0
DEFVAR LF@aux5
DEFVAR LF@aux6
MOVE LF@$RTVL0x55ffc85b9f40 string@
LABEL LDO_WHILE6
GETCHAR LF@tmp_concat LF@str_s LF@str_i
CONCAT LF@$RTVL0x55ffc85b9f40 LF@$RTVL0x55ffc85b9f40 LF@tmp_concat
ADD LF@str_i LF@str_i int@1
ADD LF@cnt LF@cnt int@1
JUMPIFEQ LEND6 LF@str_i LF@str_length
JUMPIFNEQ LDO_WHILE6 LF@cnt LF@str_n
LABEL LEND6
PUSHS LF@$RTVL0x55ffc85b9f40
POPS LF@$RTVL0x55ffc85b9f40
POPFRAME
RETURN
LABEL $FOOL6

JUMP $FOOL7
LABEL $FNAME0x55ffc85ba050
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85ba050
MOVE LF@$RTVL0x55ffc85ba050 nil@nil
PUSHS LF@$RTVL0x55ffc85ba050
DEFVAR LF@str_s
MOVE LF@str_s LF@$P1
DEFVAR LF@str_i
MOVE LF@str_i LF@$P2
DEFVAR LF@str_length
STRLEN LF@str_length LF@str_s
DEFVAR LF@aux1
DEFVAR LF@aux2
GT LF@aux1 LF@str_i int@-1
JUMPIFEQ LEND7 LF@aux1 bool@false
LT LF@aux2 LF@str_i LF@str_length
JUMPIFEQ LEND7 LF@aux2 bool@false
STRI2INT LF@$RTVL0x55ffc85ba050 LF@str_s LF@str_i
LABEL LEND7
PUSHS LF@$RTVL0x55ffc85ba050
POPS LF@$RTVL0x55ffc85ba050
POPFRAME
RETURN
LABEL $FOOL7

JUMP $FOOL8
LABEL $FNAME0x55ffc85ba160
PUSHFRAME
DEFVAR LF@$RTVL0x55ffc85ba160
MOVE LF@$RTVL0x55ffc85ba160 nil@nil
PUSHS LF@$RTVL0x55ffc85ba160
DEFVAR LF@ascii
MOVE LF@ascii LF@$P1
DEFVAR LF@aux1
DEFVAR LF@aux2
GT LF@aux1 LF@ascii int@-1
JUMPIFNEQ LERROR8 LF@aux1 bool@true
LT LF@aux2 LF@ascii int@256
JUMPIFNEQ LERROR8 LF@aux2 bool@true
INT2CHAR LF@$RTVL0x55ffc85ba160 LF@ascii
JUMP OK8
LABEL LERROR8
#ERROR index error 0-255 ascii
EXIT int@58
LABEL OK8
PUSHS LF@$RTVL0x55ffc85ba160
POPS LF@$RTVL0x55ffc85ba160
POPFRAME
RETURN
LABEL $FOOL8

#defvar
PUSHS int@10

#defvar
PUSHS float@0x1.6433b5393250bp+2

CREATEFRAME
PUSHFRAME
#jsme tu EqNeq
DEFVAR LF@$ene0
DEFVAR LF@$ene1
DEFVAR LF@$t2
POPS LF@$t2
DEFVAR LF@$t3
POPS LF@$t3
TYPE LF@$ene0 LF@$t2
TYPE LF@$ene1 LF@$t3
JUMPIFNEQ $L0 string@string LF@$ene0
JUMPIFNEQ $L1 string@string LF@$ene1
PUSHS LF@$t3
PUSHS LF@$t2
JUMP $LEND0
LABEL $L1
PUSHS LF@$t3
PUSHS LF@$t2
PUSHS nil@nil
JUMP $LEND0
LABEL $L0
JUMPIFNEQ $L2 string@int LF@$ene0
JUMPIFNEQ $L3 string@int LF@$ene1
PUSHS LF@$t3
PUSHS LF@$t2
JUMP $LEND0
LABEL $L3
JUMPIFNEQ $L4 string@float LF@$ene1
PUSHS LF@$t3
PUSHS LF@$t2
INT2FLOATS
JUMP $LEND0
LABEL $L4
PUSHS LF@$t3
PUSHS LF@$t2
PUSHS nil@nil
JUMP $LEND0
LABEL $L2
JUMPIFNEQ $L5 string@float LF@$ene0
JUMPIFNEQ $L6 string@float LF@$ene1
PUSHS LF@$t3
PUSHS LF@$t2
JUMP $LEND0
LABEL $L6
JUMPIFNEQ $L7 string@int LF@$ene1
PUSHS LF@$t3
INT2FLOATS
PUSHS LF@$t2
JUMP $LEND0
LABEL $L7
PUSHS LF@$t3
PUSHS LF@$t2
PUSHS nil@nil
JUMP $LEND0
LABEL $L5
PUSHS LF@$t3
PUSHS LF@$t2
PUSHS nil@nil
JUMP $LEND0
LABEL $LEND0
POPFRAME
CREATEFRAME
PUSHFRAME
DEFVAR LF@$ISNIL2
POPS LF@$ISNIL2
DEFVAR LF@$type3
TYPE LF@$type3 LF@$ISNIL2
JUMPIFEQ $LISNIL8 LF@$type3 string@nil
PUSHS LF@$ISNIL2
EQS
NOTS
JUMP $LENDISNIL8
LABEL $LISNIL8
POPS LF@$ISNIL2
POPS LF@$ISNIL2
PUSHS bool@false
LABEL $LENDISNIL8
POPFRAME
DEFVAR GF@$podminka0
POPS GF@$podminka0
#if start
DEFVAR GF@$Tpodminka0
TYPE GF@$Tpodminka0 GF@$podminka0
JUMPIFEQ $LTESTEND10 GF@$Tpodminka0 string@bool
JUMPIFEQ $LTEST10 GF@$Tpodminka0 string@nil
MOVE GF@$podminka0 bool@true
JUMP $LTESTEND10
LABEL $LTEST10
MOVE GF@$podminka0 bool@false
LABEL $LTESTEND10
JUMPIFNEQ $IFL0 GF@$podminka0 bool@true

CREATEFRAME
#genFcallParT 
DEFVAR TF@$P1
MOVE TF@$P1 string@a\010
#fcall
CALL $FNAME0x55ffc85b9d20
#if else
JUMP $IFEND0
LABEL $IFL0

CREATEFRAME
#genFcallParT 
DEFVAR TF@$P1
MOVE TF@$P1 string@b\010
#fcall
CALL $FNAME0x55ffc85b9d20
LABEL $IFEND0
EXIT int@0
